import site
import os
import re
import sys


FILE_DIR = os.path.dirname(os.path.abspath(__file__))
site.addsitedir(FILE_DIR)


ADK_ROOT_FILE = 'sdk.xml'


def walk_up(last):
    """ like os.walk, but in reverse, goes up the directory tree.
        Unlike os.walk, doesn't differentiate files and folders """
    last = os.path.realpath(last)

    try:
        yield last, os.listdir(last)
    except (IOError, OSError) as e:
        print(e)
        return

    one_up = os.path.realpath(os.path.join(last, '..'))

    if last == one_up:
        return

    for x in walk_up(one_up):
        yield x


def find_adk_root():
    try:
        adk_root = os.environ['ADK_ROOT']
    except KeyError:
        python_dir = os.path.dirname(sys.executable)

        for current_dir, contents in walk_up(python_dir):
            if ADK_ROOT_FILE in contents:
                adk_root = current_dir
                break
        else:
            print('WARNING: ADK root not found!')
            adk_root = ''

    return os.path.normpath(adk_root).strip()


def find_tcl():
    python_dir = os.path.dirname(sys.executable)
    tcl_dir = os.path.join(python_dir, 'tcl', 'tcl8.5')
    if os.path.isdir(tcl_dir):
        return tcl_dir
    else:
        return ''


os.environ['ADK_ROOT'] = find_adk_root()
os.environ['TCL_LIBRARY'] = find_tcl()


def get_adk_modules():
    adk_modules = []
    pathfiles = [f for f in os.listdir(FILE_DIR) if f.endswith('.pth')]
    for pathfile in pathfiles:
        pathfile = os.path.abspath(os.path.join(FILE_DIR, pathfile))
        with open(pathfile, 'r') as pf:
            for _, line in enumerate(pf):
                if line.startswith("#"):
                    continue
                tail = line.rsplit('../')[-1]
                adk_modules.append(os.path.normcase(tail.strip()))
    return adk_modules


def add_missing_packages_to_sys_path():
    adk_modules = get_adk_modules()
    current_sys_path = set(sys.path)
    for module in adk_modules:
        found = any(module in path for path in current_sys_path)
        if not found:
            sys.path.append(os.path.join(os.environ['ADK_ROOT'], module))


add_missing_packages_to_sys_path()
